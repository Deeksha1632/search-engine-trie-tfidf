project_setup_with_git:
  step_1: 
    description: "Create Project Folder"
    example: "search-engine-trie-tfidf"
  step_2:
    description: "Initialize Git"
    command: "git init"
    purpose: "Turns your folder into a Git repository (version control system)"
  step_3:
    description: "Create Folder Structure & Files"
    folders:
      - "trie/  # for Trie code"
    files:
      - "trie/trie.py  # Trie implementation"
      - "main.py  # to test code"
      - "README.md  # project overview"
      - ".gitignore  # to ignore cache and secrets"
  step_4:
    description: "Setup .gitignore"
    content: |
      __pycache__/
      *.pyc
      .env
  step_5:
    description: "Add & Commit Files"
    commands:
      - "git add .  # stage files"
      - 'git commit -m "Initial commit: project structure and basic files"  # commit snapshot'
  purpose:
    - "Keeps project clean & modular"
    - "Records history of changes"
    - "Helps collaborate or revert changes later"
    - "Avoids committing unnecessary files"



Step-by-step logic for autocomplete:
1. Traverse the Trie to the node representing the last character of the prefix
If at any point the prefix is not found, return empty list [].

2. From that node, perform a DFS (Depth First Search) to find all complete words below it
Collect words by tracking characters as you go deeper.

3. Return the list of words found.